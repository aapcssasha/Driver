(()=>{"use strict";var t={194:(t,e,r)=>{r.d(e,{storage:()=>o});const o={getItem:t=>{try{return localStorage.getItem(t)}catch{try{return sessionStorage.getItem(t)}catch{return null}}},setItem:(t,e)=>{try{return localStorage.setItem(t,e)}catch{try{return sessionStorage.setItem(t,e)}catch{}}}}}},e={};function r(o){var n=e[o];if(void 0!==n)return n.exports;var a=e[o]={exports:{}};return t[o](a,a.exports,r),a.exports}r.d=(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};(()=>{r.r(o),r.d(o,{getAnonymousId:()=>n});var t=r(194);const e=(async()=>fetch("/api/anonymous-id").then((t=>{if(!t.ok)throw new Error("could not fetch QUB anonymous ID");return t.json()})).then((({anonymousId:e})=>(t.storage.setItem("qub_anonymous_id",e),e))).catch((t=>t)))(),n=async()=>{const t=await e;if(t instanceof Error)throw t;return t}})(),window.pfuUserTracker=o})();